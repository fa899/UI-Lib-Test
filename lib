local LibName = "Library"
_G.LibName = LibName

wait()
local ULib = {}

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local function MakeDraggable(topbarobject, object)
	local Dragging = nil
	local DragInput = nil
	local DragStart = nil
	local StartPosition = nil

	local function Update(input)
		local Delta = input.Position - DragStart
		local pos =
			UDim2.new(
				StartPosition.X.Scale,
				StartPosition.X.Offset + Delta.X,
				StartPosition.Y.Scale,
				StartPosition.Y.Offset + Delta.Y
			)
		object.Position = pos
	end

	topbarobject.InputBegan:Connect(
		function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				Dragging = true
				DragStart = input.Position
				StartPosition = object.Position

				input.Changed:Connect(
					function()
						if input.UserInputState == Enum.UserInputState.End then
							Dragging = false
						end
					end
				)
			end
		end
	)

	topbarobject.InputChanged:Connect(
		function(input)
			if
				input.UserInputType == Enum.UserInputType.MouseMovement or
				input.UserInputType == Enum.UserInputType.Touch
			then
				DragInput = input
			end
		end
	)

	UserInputService.InputChanged:Connect(
		function(input)
			if input == DragInput and Dragging then
				Update(input)
			end
		end
	)
end

local Library = Instance.new("ScreenGui")
Library.Name = LibName
Library.Parent = game.CoreGui
Library.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local uitoggled = false
UserInputService.InputBegan:Connect(
	function(io, p)
		if io.KeyCode == Enum.KeyCode.RightControl or io.KeyCode == Enum.KeyCode.RightShift then
			if uitoggled == false then
				Library.Enabled = false
				uitoggled = true
			else
				Library.Enabled = true
				uitoggled = false
			end
		end
	end
)
function ULib:Window(title)
	local FirstTab = false
	local Page = Instance.new("TextLabel")
	local UICorner = Instance.new("UICorner")
	local Toggle = Instance.new("TextButton")
	local PageFrame = Instance.new("Frame")
	local UIList = Instance.new("UIListLayout")

	Page.Name = "Page"
	Page.Parent = Library
	Page.BackgroundColor3 = Color3.fromRGB(16, 16, 16)
	Page.Position = UDim2.new(0.357420355, 0, 0.451910377, 0)
	Page.Size = UDim2.new(0, 342, 0, 25)
	Page.Font = Enum.Font.GothamSemibold
	Page.Text = "       "..title
	Page.TextColor3 = Color3.fromRGB(255, 255, 255)
	Page.TextSize = 14.000
	Page.TextXAlignment = Enum.TextXAlignment.Left

	UICorner.CornerRadius = UDim.new(0, 6)
	UICorner.Parent = Page
	
	UIList.Parent = PageFrame

	Toggle.Name = "Toggle"
	Toggle.Parent = Page
	Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Toggle.BackgroundTransparency = 1.000
	Toggle.Position = UDim2.new(0.0227170512, 0, 0.160000011, 0)
	Toggle.Rotation = 90.000
	Toggle.Size = UDim2.new(0, 18, 0, 16)
	Toggle.Font = Enum.Font.SourceSans
	Toggle.Text = "â–º"
	Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	Toggle.TextSize = 14.000

	PageFrame.Name = "Frame"
	PageFrame.Parent = Page
	PageFrame.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
	PageFrame.BackgroundTransparency = 0.010
	PageFrame.BorderSizePixel = 0
	PageFrame.Position = UDim2.new(0, 0, 0.800000012, 0)
	PageFrame.Size = UDim2.new(0, 342, 0, 168)

	local UserInputService = game:GetService("UserInputService")

	local gui = Page

	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			if gui.Visible then
				update(input)
			end
		end
	end)
	
	local function tweenRotation(toRotate, Delay, Degrees)
		local tw,tr=game:GetService('TweenService'),toRotate
		local info=TweenInfo.new(Delay,Enum.EasingStyle.Sine,Enum.EasingDirection.Out,0,false,0)
		local g=
			{
				Rotation = Degrees
			}
		tw:Create(tr,info,g):Play()
	end
	local t1t=false
	Toggle.MouseButton1Click:Connect(function()
		if t1t == false then
			t1t = true
		else
			t1t=false
		end
		if t1t == true then
			tweenRotation(Toggle, 1, 0)
			wait(1)
			PageFrame.Visible = false
		else
			tweenRotation(Toggle, 1, 90)
			wait(1)
			PageFrame.Visible = true
		end
	end)
	local Children = {}
	function Children:AddButton(text, callback)
		local bttn = Instance.new("TextButton")
		local yes = Instance.new("UICorner")
		yes.CornerRadius = UDim.new(0, 4)
		yes.Parent = bttn
		bttn.Parent = PageFrame
		bttn.Size = UDim2.new(0, 305,0, 30)
		bttn.BackgroundColor3 = Color3.fromRGB(13,13,13)
		bttn.TextColor3 = Color3.fromRGB(255,255,255)
		bttn.Font = Enum.Font.GothamSemibold
		bttn.Text = text
		local btn = {}
		btn.cb = callback
		local buttonT = {}
		bttn.MouseButton1Click:Connect(function(callback)
			pcall(btn.cb)
		end)
		return buttonT
	end
	function Children:AddSwitch(text, callback)
		local Toggled = false
		local toggleB = {}
		
		local Toggle = Instance.new("TextButton")
		local ToggleCorner = Instance.new("UICorner")
		local Title = Instance.new("TextLabel")
		local ToggleFrame = Instance.new("Frame")
		local ToggleFrameCorner = Instance.new("UICorner")
		local ToggleFrameRainbow = Instance.new("Frame")
		local ToggleFrameRainbowCorner = Instance.new("UICorner")
		local ToggleDot = Instance.new("Frame")
		local ToggleDotCorner = Instance.new("UICorner")
		
		Toggle.Name = "Toggle"
		Toggle.Parent = PageFrame
		Toggle.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
		Toggle.Position = UDim2.new(-0.747557044, 0, 0.729113936, 0)
		Toggle.Size = UDim2.new(0, 305,0, 30)
		Toggle.Font = Enum.Font.Gotham
		Toggle.Text = ""
		Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
		Toggle.TextSize = 14.000

		ToggleCorner.CornerRadius = UDim.new(0, 6)
		ToggleCorner.Name = "ToggleCorner"
		ToggleCorner.Parent = Toggle

		Title.Name = "Title"
		Title.Parent = Toggle
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.Position = UDim2.new(0.0198511165, 0, 0, 0)
		Title.Size = UDim2.new(0, 192, 0, 28)
		Title.Font = Enum.Font.Gotham
		Title.Text = text
		Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title.TextSize = 14.000
		Title.TextXAlignment = Enum.TextXAlignment.Left
		
		ToggleFrame.Name = "ToggleFrame"
		ToggleFrame.Parent = Toggle
		ToggleFrame.BackgroundColor3 = Color3.fromRGB(22, 23, 27)
		ToggleFrame.Position = UDim2.new(0.893300176, 0, 0.142857149, 0)
		ToggleFrame.Size = UDim2.new(0, 36, 0, 19)
		ToggleFrameCorner.CornerRadius = UDim.new(1, 0)
		ToggleFrameCorner.Name = "ToggleFrameCorner"
		ToggleFrameCorner.Parent = ToggleFrame
		Toggle.MouseButton1Click:Connect(
			function()
				Toggled = not Toggled
				pcall(callback, Toggled)
				ToggleFrame.BackgroundColor3 = Color3.fromRGB(0, 216, 0)
			end
		)
		return toggleB;
	end
	return Children
end
return ULib
